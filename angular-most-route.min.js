function HttpRoute(url,route){this.routeData=[];this.url=url;this.route=route}HttpRoute.prototype.data=function(key){try{if(key==null)return null;if(key.length==0)return null;var item=null;for(var i=0;i<this.routeData.length;i++){var x=this.routeData[i];if(x.name==(key.indexOf(":")==0?key:":"+key)){item=x;break}}if(item!=null)return item.value;return null}catch(e){throw e}};HttpRoute.prototype.parse=function(url){var result=[];if(url==null||this.url==null)return result;if(url.length==0||this.url.length==0)return result;var params=getRouteParams(this.url);var str=this.url.replace(/(:\b(\w+)\b)/gi,"([\\w-]+)");var matcher=new RegExp("^"+str+"$");var matches=matcher.exec(url);this.routeData=[];for(var i=0;i<params.length;i++){this.routeData.push({name:params[i],value:matches[i+1]})}};HttpRoute.prototype.format=function(){if(this.route==null)throw"Route cannot be empty.";var path=this.route;for(var i=0;i<this.routeData.length;i++){var item=this.routeData[i];path=path.replace(item.name,item.value)}return path};HttpRoute.prototype.isMatch=function(url){if(url==null||this.url==null)return false;if(url.length==0||this.url.length==0)return false;var url1=url;var k=url.indexOf("?");if(k>=0)url1=url.substr(0,k);var str=this.url.replace(/(:\b(\w+)\b)/gi,"([\\w-]+)");var matcher=new RegExp("^"+str+"$");return matcher.test(url1)};function getRouteParams(url){if(url==null)return[];if(url.length==0)return[];var re=/(:\b(\w+)\b)/gi;var result=[];var arr=[];while((arr=re.exec(url))!==null){result.push(arr[0])}return result}HttpRoute.query=function(url){var result={};if(typeof url!=="string")return result;if(typeof window==="undefined")return result;if(typeof window["routes"]==="undefined")return result;var uri=url;var r=/^(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/gi;var matches=r.exec(url);if(matches)uri=matches[3];var routes=window["routes"],httpRoute=null;for(var i=0;i<routes.length;i++){var item=routes[i];httpRoute=route.createInstance(item.url,item.route);if(httpRoute.isMatch(uri)){httpRoute.parse(uri);var param=httpRoute.routeData.filter(function(x){return x.name==":controller"})[0];if(typeof param==="undefined"){var controller=item.controller;if(typeof controller==="undefined"){var segments=uri.split("/");if(segments.length==2)controller="root";else controller=segments[1]}httpRoute.routeData.push({name:":controller",value:controller})}param=httpRoute.routeData.filter(function(x){return x.name==":action"})[0];if(typeof param==="undefined")httpRoute.routeData.push({name:":action",value:item.action});break}}for(var i=0;i<httpRoute.routeData.length;i++){var item=httpRoute.routeData[i],name=item.name.substr(1);result[name]=item.value}var querystring=matches[4];if(querystring){var query=querystring.split("&");for(var i=0;i<query.length;i++){var queryParam=query[i].split("=");if(queryParam.length==2){if(typeof result[queryParam[0]]==="undefined")result[queryParam[0]]=queryParam[1]}}}return result};var route={createInstance:function(url,route){return new HttpRoute(url,route)},query:HttpRoute.query};if(typeof window!=="undefined")window.route=route.query(window.location.href);if(typeof exports!=="undefined")module.exports=route;
//# sourceMappingURL=angular-most-route.min.js.map